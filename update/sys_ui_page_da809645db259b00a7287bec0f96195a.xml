<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_ui_page">
    <sys_ui_page action="INSERT_OR_UPDATE">
        <category>general</category>
        <client_script><![CDATA[var app = angular.module('appProv',[]);
app.controller('appProvCtrl',function($scope,$http,ajaxCall,$q){
	
	$scope.record = {};
	$scope.canEdit = true;
	$scope.deliveryGroups = [];
	$scope.adGroups = {};
	$scope.chosenAppsNames = "";
	
	var getParameterValue = function(name) {
		
		var url = document.URL.parseQuery();
		
		if (url[name]) {			
			return decodeURI(url[name]);			
		}else{			
			return;			
		}
		
	};	

	
	$scope.selectTab = function($event){
		var tab = $event.currentTarget;
	
		var tabClicked = jQuery(tab);
			
		var href = tabClicked.find("a").attr("goto");
		var div = jQuery(href);

		jQuery('.tab-pane').each(function(){

			if(href == this.id){
				jQuery(this).addClass('active');
			}else{
				jQuery(this).removeClass('active');
			}


		});
	};
	
	var createNewDeliveryGroup = function(app, deliveryGroupName){
		var delGrp = {
			Name:deliveryGroupName,
			SiteName: app.SiteName,
			SiteId: app.SiteId,
			ADGroups:{},
			Applications:{},
			chosen:false
		};
		
		return delGrp;
	};
	
	var getDeliveryGroupUpdates = function(delGroupString,delGroupName){
		
		try{
			var delGroups = JSON.parse(delGroupString);
			for(var d = 0; d < delGroups.length; d++){
				if(delGroups[d].group == delGroupName){
					return delGroups[d].users;				
				}
			}
		}catch(error){
			return [];
		}
		
	};
	
	var getADGroupUpdates = function(adGroupString,delGroupName){
		var adGroupResults = {};
		try{
			var adGroups = JSON.parse(adGroupString);
			for(var a = 0; a < adGroups.length; a++){
				if(adGroups[a].del_grp_name == delGroupName){
					adGroupResults[adGroups[a].group] = adGroups[a].users;
				}
			}
			return adGroupResults;
		}catch(error){
			return {};
		}
		
	};
	
	/*******************************
	When application loads and there
	already are chosen users.
	Function will load users chosen
	for the given delivery group
	********************************/
	var getChosenUsers = function(delGroupName){
		
		var delGroupString = $scope.record.variables['delivery_group_updates'].value;
		var adGroupString = $scope.record.variables['ad_group_updates'].value;		
					
		var loadedUsers = {
			del_grp_users :[],
			ad_grps_users :{}
		};
		
		loadedUsers.del_grp_users = (delGroupString != '')?getDeliveryGroupUpdates(delGroupString,delGroupName):[];
		loadedUsers.ad_grps_users = (adGroupString != '')?getADGroupUpdates(adGroupString,delGroupName):{};
						
		return loadedUsers;
		
	};
	var getChosenGroups = function(chosenAppsNames,all_apps){
	
		var deliveryGroups = {};		
		var delGrp;
		var delGrpName;
		var app;
		var adGrps;
		
		for(var i = 0; i < all_apps.length; i++){		
			app = all_apps[i];			
						
			for(var d = 0;d < app.DesktopGroup.length; d++){
				delGrpName = app.DesktopGroup[d].Name;
				adGrps = app.DesktopGroup[d].ADGroups;
				
				if(deliveryGroups[delGrpName]){
				
					for(var j = 0; j < adGrps.length; j++){
						deliveryGroups[delGrpName].ADGroups[adGrps[j]] = adGrps[j];
					}

					deliveryGroups[delGrpName].Applications[app.Name] = app.Name;
				}else{
					delGrp = createNewDeliveryGroup(app,delGrpName);
					
					for(var l = 0; l < adGrps.length; l++){
						delGrp.ADGroups[adGrps[l]] = adGrps[l];
					}

					delGrp.Applications[app.Name] = app.Name;
					deliveryGroups[delGrpName] = delGrp;
				}

				if(chosenAppsNames.includes(all_apps[i].Name)){							
					deliveryGroups[delGrpName].chosen = true;
				}	
				
				
				deliveryGroups[delGrpName].loaded_users = getChosenUsers(delGrpName);
				
			}						
		}
		//deliveryGroups['RDSHosted_Desktop'].ADGroups = ["Group1","Group2"];
		for(var grp in deliveryGroups){
			$scope.deliveryGroups.push(deliveryGroups[grp]);
		}
		console.log($scope.deliveryGroups);
	};	
	
	var requestApplicationHandler = function(answer){
		try{			
			$scope.all_apps = JSON.parse(answer);	
			
			getChosenGroups($scope.chosenAppsNames,$scope.all_apps);
		}catch(error){
			console.log('Unable to load Applications',error);
		}
	};
	
	var getAllApplications = function(callback){
		var appAjax = new GlideAjax('CTXClientRequest');
		appAjax.addParam('sysparm_name','getApplications');
		appAjax.getXML(callback);	
	};
	
	var addContentToPage = function(answer){		
		var ritm;
		try{			
			$scope.record  = JSON.parse(answer);		
			console.log($scope.record);
			if($scope.record.state.value != 1){
				$scope.canEdit = false;
			}
			$scope.chosenAppsNames = $scope.record.variables["chosen_apps"].value;
			ajaxCall.run(getAllApplications).then(requestApplicationHandler);			
		}catch(error){
			console.log('Unable to load RITM',error);
			window.location = "/sc_req_item.do?sys_id="+$scope.record.sys_id;
		}
	};
	
	var loadRITMAndVariables = function(ritm_sys_id,callback){				
		var appAjax = new GlideAjax('CTXClientRequest');
		appAjax.addParam('sysparm_name','getRITMAndVariables');
		appAjax.addParam('sysparm_ritm_sys_id',ritm_sys_id);
		appAjax.getXML(callback);				
	};
	
	var createADGroupObject = function(groupElement){
		
		var groupName = jQuery(groupElement).attr('group-name');
		var delGrpName = jQuery(groupElement).attr('del-group-name');
		
		var chosen_user_span = jQuery(groupElement).find('[id="'+groupElement.id+'_chosen_users"]');
		
		var users = jQuery(chosen_user_span).attr('members');
		var groupType = jQuery(groupElement).attr('group-type');		
		
		try{
			users = JSON.parse(users);			
		}catch(error){
			users = null;
		}
		
		if(users != null && users != ''){
			return {
				group:groupName,
				del_grp_name:delGrpName,
				group_type:groupType,
				users: users
			};			
		}
		return null;
	};
	var createDeliveryGroupObject = function(groupElement){
		var groupName = jQuery(groupElement).attr('group-name');
		var siteId = jQuery(groupElement).attr('site-id');		
		var chosen_user_span = jQuery(groupElement).find('[id="'+groupElement.id+'_chosen_users"]');
		var users = jQuery(chosen_user_span).attr('members');
		var applications = jQuery(groupElement).attr('applications');
		var groupType = jQuery(groupElement).attr('group-type');		
		
		try{
			users = JSON.parse(users);
			applications = JSON.parse(applications);
		}catch(error){
			users = null;
			applications = null;
		}
		
		if(users != null && users != '' && applications != null && applications != ''){
			return {
				group:groupName,
				group_type:groupType,
				applications:applications,
				site_id:siteId,
				users: users
			};			
		}
		return null;
	};
	
	var createGroupObject = function(groupElement){
		
		var groupType = jQuery(groupElement).attr('group-type');		
		var groupObj;
		
		if(groupType == 'Delivery Group'){
			return createDeliveryGroupObject(groupElement);
		}else if(groupType == 'AD Group'){
			return createADGroupObject(groupElement);
		}
		
		return null;		
	};
	
	var getGroupUpdates = function(){
		var groupsToSubmit = [];
		var groupObj;
		jQuery('group-object').each(function(){
										
			jQuery(this).find('.group-id-container').each(function(){
				groupObj = createGroupObject(this);
			
				if(groupObj != null){
					groupsToSubmit.push(groupObj);							
				}						
			});						
			
		});
		
		return groupsToSubmit;
	};
	
	var sortGroups = function(groupsUpdate){
		
		var sortedGroups = {
			deliveryGroups:[],
			adGroups:[]
		};
		
		for(var i = 0;i < groupsUpdate.length; i++){
			if(groupsUpdate[i].group_type == 'Delivery Group'){
				sortedGroups.deliveryGroups.push(groupsUpdate[i]);
			}else if(groupsUpdate[i].group_type == 'AD Group'){
				sortedGroups.adGroups.push(groupsUpdate[i]);
			}
		}	
		return sortedGroups;	
	};	
	
	$scope.submitUpdate = function(){
		
		var groupsToSubmit = getGroupUpdates();
		
		var callback = function(response){
			var answer = response.responseXML.documentElement.getAttribute('answer');
			
			var reloadForm = function(res){
				window.location.reload();
			};
			
			if(answer == 'success'){
				var reqAjax = new GlideAjax('CTXClientRequest');
				reqAjax.addParam('sysparm_name','updateRITMStateWorkInProgress');
				reqAjax.addParam('sysparm_ritm_sys_id',$scope.record.sys_id);
				reqAjax.getXML(reloadForm);
			}
			
		};
		
		groupsToSubmit = sortGroups(groupsToSubmit);
	
		var deliveryGroups = groupsToSubmit.deliveryGroups;
		var adGroups = groupsToSubmit.adGroups;
		
		var deliGrpsVariableSysId = $scope.record.variables['delivery_group_updates'].sys_id;
		var adGrpsVariableSysId = $scope.record.variables['ad_group_updates'].sys_id;		
		
		var variableSysIds = {"delivery_group_updates":deliGrpsVariableSysId,"ad_group_updates":adGrpsVariableSysId};
		var valueUpdates = {"delivery_group_updates":deliveryGroups,"ad_group_updates":adGroups};
		
		var appAjax = new GlideAjax('CTXClientRequest');
		appAjax.addParam('sysparm_name','appProvUpdateGrpVars');
		appAjax.addParam('sysparm_variable_sys_ids',JSON.stringify(variableSysIds));
		appAjax.addParam('sysparm_value_updates',JSON.stringify(valueUpdates));
		appAjax.getXML(callback);
		
	};		
	
	(function loadRequest(){
		var ritm_sys_id = getParameterValue('sys_id');
		
		ajaxCall.run(loadRITMAndVariables,ritm_sys_id).then(addContentToPage);
	})();
		
});

app.service('ajaxCall',function($q){
		
	this.run = function(ajaxFunc,input){
		var deferred = $q.defer();
		var callback = function(response){
			var answer = response.responseXML.documentElement.getAttribute('answer');
			deferred.resolve(answer);
		};
		if(input){
			ajaxFunc(input,callback);
		}else{
			ajaxFunc(callback);
		}
		
		return deferred.promise;
	};
});

app.service('summaryParser',function(){
	
	this.parseUsers = function(users){
	
		var max = (users.length > 8)? 8:users.length;
		
		var userNames = "";
		for(var i = 0; i < max; i++){			
			userNames = (i < (max-1))?userNames+users[i].name+', ':userNames+users[i].name;
		}
		return userNames;
	};
	
	this.parseApps = function(apps){
		var max = (apps.length > 8)? 8:apps.length;
		
		var appNames = "";
		for(var i = 0; i < max; i++){			
			appNames = (i < (max-1))?appNames+apps[i]+', ':appNames+apps[i];
		}
		return appNames;
	};
});

app.directive('groupObject',function(summaryParser,$compile){
	var xml;
	
	function isEmpty(obj) {
		for(var key in obj) {
			if(obj.hasOwnProperty(key))
				return false;
		}
		return true;
	}
	
	var html = document.getElementById("group_template").innerHTML;
	html = html.substring(2, html.length-2);
	
	return {
		template:html,
		scope: {						
			allapps:'@'
		},
		
		link: function($scope, $element, $attr) {
					
			$scope.canEdit = ($attr.canedit == 'true');
			$scope.group = JSON.parse($attr.group);
			$scope.type = $attr.type;		
			$scope.directiveXML = "";			
		
			var empty = {};
			$scope.hasADGroup = !isEmpty($scope.group.ADGroups);
			
			
			var createMoreLink = function(members){

				var link = (members.length > 4)?("+" + (members.length-4)+" more"):'';
				return link;
			};
			
			var getMembersNames = function(members){
				var names = "";
				var max = (members.length > 4)? 4:members.length;

				for(var i = 0; i < max;i++){
					names += (i < (max-1))? members[i].name+", ":members[i].name;
				}
				
				console.log();
				return names;
			};
			
			$scope.getMoreLink = function(members){
				if(members == null){
					return '';
				}
				var link = createMoreLink(members);
				return link;
			};
			$scope.getMembersNames = function(members){	
				if(members == null){
					return '';
				}
				var names = getMembersNames(members);
				$scope.members = JSON.stringify(members);
				return names;
			};
		
			
			if($attr.loadedusers && $attr.loadedusers != ''){
				$scope.loadedusers = JSON.parse($attr.loadedusers);			
			}	
			
			$scope.openApplicationModal = function(group){
				
				var apps = [];
				for(var app in group.Applications){
					apps.push(app);
				}
				var description = "Following are the applications that are part of";
				
				var modalDialog = new GlideModal("x_wcs_ctrx_auto_sv_application_modal");
				modalDialog.setTitle("Applications");				
				modalDialog.setPreference('apps',apps);	
				modalDialog.setPreference('description',description);	
				modalDialog.setPreference('group_name',group.Name);
				modalDialog.setSize(700, 800);
				modalDialog.render();
			};
			
			$scope.openUserSelectModal = function(groupId,groupName){
				
				if(groupName == null){
					groupName = groupId;
				}
				var users;
				try{
					
					if($scope.canEdit){
						users = $attr.users;
					}else{
						users = $scope.members;
					}
				}catch(error){
					console.log('Unable to parse input');				
					return;
				}
				var modalDialog;
				if($scope.canEdit){
					modalDialog = new GlideModal("x_wcs_ctrx_auto_sv_group_user_select");
					modalDialog.setTitle("User selection");
					modalDialog.setPreference("group_type",$attr.type);
					modalDialog.setPreference("group_id",groupId);
					modalDialog.setPreference("group_name",groupName);
					modalDialog.setPreference("users",users);
					modalDialog.setSize(700, 800);
					modalDialog.render();
				}else{
					modalDialog = new GlideModal("x_wcs_ctrx_auto_sv_more_list_page");
					modalDialog.setTitle("Users");
					modalDialog.setPreference("list",users);
					modalDialog.setPreference("title","Users");
					modalDialog.setSize(500, 800);
					modalDialog.render();
				}
				
			};
			
			 
		},
	};
});

app.directive('summaryList',function(summaryParser,$compile){
	var xml;
	
	var html = document.getElementById("summary_list").innerHTML;
	html = html.substring(2, html.length-2);
	
	
	return {
		template:html,
		scope: {			
			content:'@',
			title:'@',
			max:'@'
		},
		
		link: function($scope, $element, $attr) {
			
			$scope.parsed_content = '';
			$scope.showMore = false;
			$scope.more_num = '';
			
			var updateListContent = function(content){
				
				if(content != null && content != ''){
					if($attr.title == 'Users'){
						var users = JSON.parse($attr.content);
						$scope.parsed_content = summaryParser.parseUsers(users);
						$scope.showMore = (users.length > $attr.max)? true:false;
						$scope.more_num = (users.length > $attr.max)? users.length - $attr.max:'';
					}else if($attr.title == "Applications"){
						var apps = $attr.content.split(',');
						$scope.parsed_content = summaryParser.parseApps(apps);
						$scope.showMore = (apps.length > $attr.max)? true:false;
						$scope.more_num = (apps.length > $attr.max)? apps.length - $attr.max:'';
					}
				}
			};
			
			$scope.$watch('content',updateListContent);
			
			$scope.moreLink = function(){
				
				var modalDialog = new GlideModal("x_wcs_ctrx_auto_sv_more_list_page");
				modalDialog.setTitle($attr.title);
				modalDialog.setPreference("list",$scope.content);
				modalDialog.setPreference("title",$attr.title);
				modalDialog.setSize(500, 800);
				modalDialog.render();
			};					
		},
	};
});

		]]></client_script>
        <description/>
        <direct>false</direct>
        <endpoint>x_wcs_ctrx_auto_sv_app_provision_view.do</endpoint>
        <html><![CDATA[<?xml version="1.0" encoding="utf-8" ?>
<j:jelly trim="false" xmlns:j="jelly:core" xmlns:g="glide" xmlns:j2="null" xmlns:g2="null">

	<head>
		<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.5.6/angular.min.js"></script>
		<style>
			.column{
				width:50%;
			}
			html[data-doctype="true"] body[data-formname="ui_page_render"] {
				padding:0;				
			}
			html[data-doctype="true"] body[data-formname="ui_page_render"] .navbar {
				margin:0;
			}
			#title_bar{
				height: 46px;	
				font-size:13px;
				color: #343D47;
				padding:5px;
				margin:0;
				margin-bottom:20px;
			}
			
			#ritm_title_label {
				margin-bottom:0;
			}
			
			.tab-title{
				font-size: 12px;
				font-weight: bold;
			}
			.tab-content{
				background-color:white;			
			}
			#tab1,#tab2{
				padding-top:20px;
				padding-left:30px;
			}
			
			#tablist{
				padding:0;
				margin-bottom:0;
			}
			
			.form_update{
				float:right;
			}
			
			#form_body{
				padding-left:50px;
				padding-right:80px;
			}
			
			#summary_lists,#fields_container{
				margin-bottom:30px;
				padding-left: 5%;
				padding-right: 10%;
			}
			#tabs-macro,#summary_lists{
				padding-left: 5%;
				padding-right: 10%;
			}
			
			#bottom-section{
				padding-top:20px;
				padding-left: 5%;
				
			}
			#fields_container,#left_column,#right_column{
				padding-left:0;
			}
			
			.del-group-pane{
				margin-bottom:30px;
			}

			.grp-title{
				font-weight:bold;
			}
			.chosen_users{		
				font-size:11px;
			}
			.no-pad-left{
				padding-left:0 !important;
			}
			.icon-info{
				margin-right:5px;
			}
			
			.summary_list_content{
				font-size: 11px;
			}

		</style>
		<script id="summary_list" type="html">
			<div class="summary_list_content no-pad-left">
				<span><b>{{title}}</b><p>{{parsed_content}} <a href="#" ng-show="showMore" ng-click="moreLink()">+{{more_num}} more</a></p></span>
			</div>

		</script>
		
		<script id="group_template" type="html">
			<div class="del-group-pane no-pad-left col-sm-12">
				<!-- DELIVERY GROUPS -->
				<div class="no-pad-left col-xs-12" ng-if="type == 'Delivery Group'">
					<div class="no-pad-left col-xs-12">	
						<p class="grp-title"><a href="#" class="icon-info" ng-click="openApplicationModal(group)"></a>{{group.Name}}, {{group.SiteName}}</p>
						<div id="{{group.Name}}" group-name="{{group.Name}}" group-type="{{type}}" site-id="{{group.SiteId}}" applications="{{group.Applications}}" class="group-id-container col-xs-12">
							<button id="{{group.Name}}_lock" href="#" class="btn btn-default btn-ref" ng-click="openUserSelectModal(group.Name)" ng-disabled="{{!canEdit}}">
								<span class="icon icon-locked" aria-hidden='true'></span>
							</button>
							<div class="no-pad-left col-xs-12">
								<p class="chosen_users">
									<span id="{{group.Name}}_chosen_users" type="text" members="{{members}}">{{getMembersNames(loadedusers.del_grp_users)}}</span>
									<a id="{{group.Name}}_more_users" href='#' ng-click='openUserSelectModal(group.Name)'>{{getMoreLink(loadedusers.del_grp_users)}}</a>
								</p>
							</div>
						</div>			
					</div>

				</div>

				<!-- AD GROUPS -->
				<div class="no-pad-left col-xs-12" ng-if="type == 'AD Group' &amp;&amp; hasADGroup" >
					<div class="no-pad-left col-xs-12">	
						<p class="grp-title"><a href="#" class="icon-info" ng-click="openApplicationModal(group)"></a>{{group.Name}}, {{group.SiteName}}</p>
						<div id="{{id}}" group-name="{{adGrp}}" del-group-name="{{group.Name}}" group-type="{{type}}" class="group-id-container col-xs-12" ng-repeat="adGrp in group.ADGroups" ng-init="id = group.Name+'_'+adGrp">				
							<div class="col-xs-12">

								<p class="grp-title" >{{adGrp}}</p>
								<button id="{{id}}_lock" href="#" class="btn btn-default btn-ref" ng-click="openUserSelectModal(id,adGrp)" ng-disabled="{{!canEdit}}">
									<span class="icon icon-locked" aria-hidden='true'></span>
								</button>
							</div>
							<div class="col-xs-12">
								<p class="chosen_users">
									<span id="{{id}}_chosen_users" type="text" members="{{members}}">{{getMembersNames(loadedusers.ad_grps_users[adGrp])}}</span>
									<a id="{{id}}_more_users" href='#' ng-click='openUserSelectModal(id,adGrp)'>{{getMoreLink(loadedusers.ad_grps_users[adGrp])}}</a>
								</p>
							</div>
						</div>
					</div>		
				</div>
			</div>
		</script>
	</head>
	
	<body ng-app="appProv" ng-controller="appProvCtrl" ng-cloak="">
		
		<nav id="title_bar" class="title_bar navbar navbar-default ">
			<div class="navbar-header col-xs-6">
				<p id="ritm_title_label"><b>Requested Item</b></p>
				<p>{{record.number}}</p>
			</div>
			<div class="navbar-right col-xs-6">
				<button class='form_update form_action_button header action_context btn btn-default' ng-click="submitUpdate()" ng-show="canEdit">Update</button>
			</div>
		</nav>
		
		<div id="form_body" class='col-xs-12'>
			<div id="fields_container" class='col-sm-12'>

				<div id="left_column" class='col-sm-6 column'>				
					<form class="form-horizontal">
						<div class="form-group">
							<label class="col-xs-12 col-md-3 col-lg-4 control-label">
								<span class="label-text">Number</span>
							</label>
							<div class="col-xs-10 col-sm-9 col-md-6 col-lg-5 form-field input_controls">
								<input value="{{record.number}}" class="form-control" readonly=""/>
							</div>
							
							<div class="col-xs-2 col-sm-3 col-lg-2 form-field-addons"></div>
						</div>
						
						
						<div class="form-group">
							<label class="col-xs-12 col-md-3 col-lg-4 control-label">
								<span class="label-text">Due Date</span>
							</label>
							<div class="col-xs-10 col-sm-9 col-md-6 col-lg-5 form-field input_controls">
								<input value="{{record.due_date}}" class="form-control" readonly=""/>
							</div>
						</div>
						<div class="col-xs-2 col-sm-3 col-lg-2 form-field-addons"></div>
					</form>			

				</div>
				<div id="right_column" class='col-sm-6 column'>				
					<form class="form-horizontal">
						<div class="form-group">
							<label class="col-xs-12 col-md-3 col-lg-4 control-label">
								<span class="label-text">State</span>
							</label>
							<div class="col-xs-10 col-sm-9 col-md-6 col-lg-5 form-field input_controls">
								<input value="{{record.state.displayValue}}" class="form-control" readonly=""/>
							</div>
							<div class="col-xs-2 col-sm-3 col-lg-2 form-field-addons"></div>
						</div>
						
					</form>		

				</div>
			</div>
			<!-- LISTS -->
			<div id="summary_lists" class="col-xs-12">
				<p><b>Application Provisioning</b></p>
				<div class="col-xs-12 no-pad-left">
					<div class="col-xs-12 col-sm-6 no-pad-left">
						<summary-list title="Users" content="{{record.variables.users.value}}" max="8"></summary-list>
					</div>
					<div class="col-xs-12 col-sm-6">
						<summary-list title="Applications" content="{{chosenAppsNames}}" max="8"></summary-list>
					</div>
				</div>
			</div>
			
			
			<!-- TABS -->
			<div id="tabs-macro" class="col-xs-12">
			
				<ul id="tablist" role="tablist" class="nav nav-tabs sn-tabs-basic">

					<li role="presentation" class="active" data-toggle="tab" ng-click="selectTab($event)">
						<a href="#" goto="tab1" class="tab-title active"><b>Add users to Delivery Group(s)</b></a>
					</li>
					<li role="presentation" data-toggle="tab" ng-click="selectTab($event)">
						<a href="#" goto="tab2" class="tab-title"><b>Add users to Active Directory Group(s)</b></a>
					</li>

				</ul>
				<div class="tab-content">
					<div id="tab1" class="tab-pane active col-sm-12">						
						
						<group-object type="Delivery Group" group="{{dgrp}}" users="{{record.variables.users.value}}" allapps="{{all_apps}}" ng-repeat="dgrp in deliveryGroups" ng-if="dgrp.chosen == true" canedit="{{canEdit}}" loadedusers="{{dgrp.loaded_users}}"></group-object>
											
					</div>
					<div id="tab2" class="tab-pane col-sm-12">			
						<group-object type="AD Group" group="{{dgrp}}" canedit="{{canEdit}}" users="{{record.variables.users.value}}" allapps="{{all_apps}}" ng-repeat="dgrp in deliveryGroups" loadedusers="{{dgrp.loaded_users}}" ng-if="dgrp.chosen == true"></group-object>
					</div>
				</div>

			</div>				
			
			<div id="bottom-section" class="col-xs-12 ">
				<button class="btn btn-default" ng-click="submitUpdate()" ng-show="canEdit">Update</button>
			</div>
			
		</div>		
		
	</body>
	
</j:jelly>]]></html>
        <name>app_provision_view</name>
        <processing_script/>
        <sys_class_name>sys_ui_page</sys_class_name>
        <sys_created_by>sebastiang</sys_created_by>
        <sys_created_on>2018-04-17 01:14:52</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>da809645db259b00a7287bec0f96195a</sys_id>
        <sys_mod_count>530</sys_mod_count>
        <sys_name>app_provision_view</sys_name>
        <sys_package display_value="Citrix IT Service Management Connector" source="x_wcs_ctrx_auto_sv">790cd3e8db8513406d3c72fc0f961915</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Citrix IT Service Management Connector">790cd3e8db8513406d3c72fc0f961915</sys_scope>
        <sys_update_name>sys_ui_page_da809645db259b00a7287bec0f96195a</sys_update_name>
        <sys_updated_by>sebastiang</sys_updated_by>
        <sys_updated_on>2018-06-04 13:29:32</sys_updated_on>
    </sys_ui_page>
</record_update>
