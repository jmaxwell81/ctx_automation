<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_ui_page">
    <sys_ui_page action="INSERT_OR_UPDATE">
        <category>general</category>
        <client_script><![CDATA[var app = angular.module('ctxReqs',[]);
app.controller('ctxReqsCtrl',function($scope,$http,htmlLoader,ajaxCall,$q){
	
	$scope.record = {};
	$scope.deliveryGroups = [];
	$scope.adGroups = {};
	$scope.chosenAppsNames = "";
	
	var getParameterValue = function(name) {
		
		var url = document.URL.parseQuery();
		
		if (url[name]) {			
			return decodeURI(url[name]);			
		}else{			
			return;			
		}
		
	};	
	
	$scope.selectTab = function($event){
		var tab = $event.currentTarget;
	
		var tabClicked = jQuery(tab);
			
		var href = tabClicked.find("a").attr("goto");
		var div = jQuery(href);

		jQuery('.tab-pane').each(function(){

			if(href == this.id){
				jQuery(this).addClass('active');
			}else{
				jQuery(this).removeClass('active');
			}


		});
	};
	
	var createNewDeliveryGroup = function(app, deliveryGroupName){
		var delGrp = {
			Name:deliveryGroupName,
			SiteName: app.SiteName,
			SiteId: app.SiteId,
			ADGroups:{},
			Applications:{},
			chosen:false
		};
		
		return delGrp;
	};
	
	var getChosenGroups = function(chosenAppsNames,all_apps){
	
		var deliveryGroups = {};		
		var delGrp;
		var delGrpName;
		var app;
		var adGrps;
		
		for(var i = 0; i < all_apps.length; i++){		
			app = all_apps[i];			
						
			for(var d = 0;d < app.DesktopGroup.length; d++){
				delGrpName = app.DesktopGroup[d].Name;
				adGrps = app.DesktopGroup[d].ADGroups;
				
				if(deliveryGroups[delGrpName]){
				
					for(var j = 0; j < adGrps.length; j++){
						deliveryGroups[delGrpName].ADGroups[adGrps[j]] = adGrps[j];
					}

					deliveryGroups[delGrpName].Applications[app.Name] = app.Name;
				}else{
					delGrp = createNewDeliveryGroup(app,delGrpName);
					
					for(var l = 0; l < adGrps.length; l++){
						delGrp.ADGroups[adGrps[l]] = adGrps[l];
					}

					delGrp.Applications[app.Name] = app.Name;
					deliveryGroups[delGrpName] = delGrp;
				}

				if(chosenAppsNames.includes(all_apps[i].Name)){							
					deliveryGroups[delGrpName].chosen = true;
				}				
			}						
		}
		
		for(var grp in deliveryGroups){
			$scope.deliveryGroups.push(deliveryGroups[grp]);
		}
	
	};	
	
	var requestApplicationHandler = function(answer){
		try{			
			$scope.all_apps = JSON.parse(answer);	
			
			getChosenGroups($scope.chosenAppsNames,$scope.all_apps);
		}catch(error){
			console.log('Unable to load Applications',error);
		}
	};
	
	var getAllApplications = function(callback){
		var appAjax = new GlideAjax('CTXClientRequest');
		appAjax.addParam('sysparm_name','getApplications');
		appAjax.getXML(callback);	
	};
	
	var addContentToPage = function(answer){		
		var ritm;
		try{			
			$scope.record  = JSON.parse(answer);		
			$scope.chosenAppsNames = $scope.record.variables["chosen_apps"].value;
			ajaxCall.run(getAllApplications).then(requestApplicationHandler);			
		}catch(error){
			console.log('Unable to load RITM',error);
		}
	};
	
	var loadRITMAndVariables = function(ctx_req_sys_id,callback){				
		var appAjax = new GlideAjax('CTXClientRequest');
		appAjax.addParam('sysparm_name','getCitrixRequest');
		appAjax.addParam('sysparm_ctx_request_sys_id',ctx_req_sys_id);
		appAjax.getXML(callback);				
	};
	
	var createGroupObject = function(groupElement,groupType){
		
		var groupElementId = groupElement.id;
				
		var groupName = jQuery(groupElement).attr('group-name');
		var siteId = jQuery(groupElement).attr('site-id');		
		var chosen_user_span = jQuery(groupElement).find('[id="'+groupElementId+'_chosen_users"]');
		var users = jQuery(chosen_user_span).attr('members');
		var applications = jQuery(groupElement).attr('applications');
				
		try{
			users = JSON.parse(users);
			applications = JSON.parse(applications);
		}catch(error){
			users = null;
			applications = null;
		}
		
		if(users != null && users != '' && applications != '' && applications != null){
			return {
				group:groupName,
				group_type:groupType,
				applications:applications,
				site_id:siteId,
				users: users
			};			
		}
		return null;
		
	};
	
	var getGroupUpdates = function(){
		var groupsToSubmit = [];
		var groupObj;
		jQuery('group-object').each(function(){
			
			var groupType = jQuery(this).attr('type');			
			
			jQuery(this).find('.group-id-container').each(function(){
				groupObj = createGroupObject(this,groupType);
				if(groupObj != null){
					groupsToSubmit.push(groupObj);							
				}						
			});						
			
		});
		return groupsToSubmit;
	};
	
	$scope.submitUpdate = function(){
		
		var groupsToSubmit = getGroupUpdates();
		
		
		var callback = function(response){
			var answer = response.responseXML.documentElement.getAttribute('answer');
			console.log(answer);
		};
		
		console.log(JSON.stringify(groupsToSubmit));
		console.log(JSON.stringify($scope.record));
		
		var appAjax = new GlideAjax('CTXClientRequest');
		appAjax.addParam('sysparm_name','updateRITMVariables');
		appAjax.addParam('sysparm_group_updates',JSON.stringify(groupsToSubmit));
		appAjax.addParam('sysparm_record',JSON.stringify($scope.record));
		appAjax.getXML(callback);
		
	};
	
	
	
	(function loadRequest(){
		var ctx_req_sys_id = getParameterValue('sys_id');
		
		ajaxCall.run(loadRITMAndVariables,ctx_req_sys_id).then(addContentToPage);
	})();
	
	
});

app.service('htmlLoader',function($http,$q){
	
	this.getHTML = function(macro_name){
		var deferred = $q.defer();
		var query = "sysparm_query=name="+macro_name;
		var fields = "&sysparm_fields=xml";
		$http({
		
			method:"GET",
			url:"api/now/table/sys_ui_macro?"+query+fields,
			headers:{
				"Accept":"application/json",
				"X-UserToken":window.g_ck
			}

		}).then(function(response){
			if(response.data && response.data.result && response.data.result.length > 0){
				deferred.resolve(response.data.result[0]);				
				
			}
		});
		
		return deferred.promise;
	};
		
});

app.service('ajaxCall',function($q){
		
	this.run = function(ajaxFunc,input){
		var deferred = $q.defer();
		var callback = function(response){
			var answer = response.responseXML.documentElement.getAttribute('answer');
			deferred.resolve(answer);
		};
		if(input){
			ajaxFunc(input,callback);
		}else{
			ajaxFunc(callback);
		}
		
		return deferred.promise;
	};
});

app.service('summaryParser',function(){
	
	this.parseUsers = function(users){
	
		var max = (users.length > 8)? 8:users.length;
		
		var userNames = "";
		for(var i = 0; i < max; i++){			
			userNames = (i < (max-1))?userNames+users[i].name+', ':userNames+users[i].name;
		}
		return userNames;
	};
	
	this.parseApps = function(apps){
		var max = (apps.length > 8)? 8:apps.length;
		
		var appNames = "";
		for(var i = 0; i < max; i++){			
			appNames = (i < (max-1))?appNames+apps[i]+', ':appNames+apps[i];
		}
		return appNames;
	};
});

app.directive('groupObject',function(summaryParser,htmlLoader,$compile){
	var xml;
	
	return {
		template:"",
		scope: {						
			allapps:'@'
		},
		
		link: function($scope, $element, $attr) {
			$scope.group = JSON.parse($attr.group);
			$scope.type = $attr.type;		
			$scope.directiveXML = "";			
		
			htmlLoader.getHTML('group_template').then(function(html){						
				$scope.directiveXML = html.xml;
			});
			
			var updateTemplate = function(value){
				$element.html(value);
				$compile($element.contents())($scope);			
								
			};
			
			$scope.$watch('directiveXML',updateTemplate);
			
			$scope.openApplicationModal = function(group){
				var modalDialog = new GlideModal("x_wcs_ctrx_auto_sv_application_modal");
				modalDialog.setTitle("Applications");				
				modalDialog.setPreference('group',group);			
				modalDialog.setSize(700, 800);
				modalDialog.render();
			};
			
			$scope.openUserSelectModal = function(group){
				
				var users;
				try{
					users = JSON.parse($attr.users);
				}catch(error){
					console.log('Unable to parse input');				
					return;
				}
				var modalDialog = new GlideModal("x_wcs_ctrx_auto_sv_group_user_select");
				modalDialog.setTitle("User selection");
				modalDialog.setPreference("group_type",$attr.type);
				modalDialog.setPreference("group_name",group);
				modalDialog.setPreference("users",users);
				modalDialog.setSize(700, 800);
				modalDialog.render();
			};
			
			 
		},
	};
});

app.directive('summaryList',function(htmlLoader,summaryParser,$compile){
	var xml;
	
	return {
		template:"",
		scope: {			
			content:'@',
			title:'@',
			max:'@'
		},
		
		link: function($scope, $element, $attr) {
			$scope.directiveXML = "";
			
			htmlLoader.getHTML('summary_list').then(function(html){						
				$scope.directiveXML = html.xml;
			});
			
			var updateTemplate = function(value){
				$element.html(value);
				$compile($element.contents())($scope);			
			};
			
			$scope.$watch('directiveXML',updateTemplate);
			
			
			$scope.parsed_content = '';
			$scope.showMore = false;
			$scope.more_num = '';
			
			var updateListContent = function(content){
				
				if(content != null && content != ''){
					if($attr.title == 'Users'){
						var users = JSON.parse($attr.content);
						$scope.parsed_content = summaryParser.parseUsers(users);
						$scope.showMore = (users.length > $attr.max)? true:false;
						$scope.more_num = (users.length > $attr.max)? users.length - $attr.max:'';
					}else if($attr.title == "Applications"){
						var apps = $attr.content.split(',');
						$scope.parsed_content = summaryParser.parseApps(apps);
						$scope.showMore = (apps.length > $attr.max)? true:false;
						$scope.more_num = (apps.length > $attr.max)? apps.length - $attr.max:'';
					}
				}
			};
			
			$scope.$watch('content',updateListContent);
			
			$scope.moreLink = function(){
				
				var modalDialog = new GlideModal("x_wcs_ctrx_auto_sv_more_list_page");
				modalDialog.setTitle($attr.title);
				modalDialog.setPreference("list",$scope.content);
				modalDialog.setPreference("title",$attr.title);
				modalDialog.setSize(500, 800);
				modalDialog.render();
			};					
		},
	};
});

		]]></client_script>
        <description/>
        <direct>false</direct>
        <endpoint>x_wcs_ctrx_auto_sv_citrix_requests.do</endpoint>
        <html><![CDATA[<?xml version="1.0" encoding="utf-8" ?>
<j:jelly trim="false" xmlns:j="jelly:core" xmlns:g="glide" xmlns:j2="null" xmlns:g2="null">

	<head>
		<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.5.6/angular.min.js"></script>
		<style>
			.column{
				width:50%;
			}
			html[data-doctype="true"] body[data-formname="ui_page_render"] {
				padding:0;				
			}
			html[data-doctype="true"] body[data-formname="ui_page_render"] .navbar {
				margin:0;
			}
			#title_bar{
				height: 46px;	
				font-size:13px;
				color: #343D47;
				padding:5px;
				margin:0;
				margin-bottom:20px;
			}
			
			#ritm_title_label {
				margin-bottom:0;
			}
			
			.tab-title{
				font-size: 12px;
				font-weight: bold;
			}
			.tab-content{
				background-color:white;			
			}
			#tab1,#tab2{
				padding-top:20px;
				padding-left:30px;
			}
			
			#tablist{
				padding:0;
				margin-bottom:0;
			}
			
			.form_update{
				float:right;
			}
			
			#form_body{
				padding-left:50px;
				padding-right:80px;
			}
			
			#summary_lists,#fields_container{
				margin-bottom:30px;
			}
			
			.footer{
				padding-top:20px;
			}
			#fields_container,#left_column,#right_column{
				padding-left:0;
			}
			
		</style>
	</head>
	
	<body ng-app="ctxReqs" ng-controller="ctxReqsCtrl" ng-cloak="">
		
		<nav id="title_bar" class="title_bar navbar navbar-default ">
			<div class="navbar-header col-xs-6">
				<p id="ritm_title_label"><b>Requested Item</b></p>
				<p>{{record.number}}</p>
			</div>
			<div class="navbar-right col-xs-6">
				<button class='form_update form_action_button header action_context btn btn-default' ng-click="submitUpdate()">Update</button>
			</div>
		</nav>
		
		
		
		<div id="form_body" class='col-sm-12'>
			<div id="fields_container" class='col-sm-12'>

				<div id="left_column" class='col-sm-6 column'>				
					<form class="form-horizontal">
						<div class="form-group">
							<label class="col-xs-12 col-md-3 col-lg-4 control-label">
								<span class="label-text">Number</span>
							</label>
							<div class="col-xs-10 col-sm-9 col-md-6 col-lg-5 form-field input_controls">
								<input value="{{record.number}}" class="form-control" readonly=""/>
							</div>
							
							<div class="col-xs-2 col-sm-3 col-lg-2 form-field-addons"></div>
						</div>
						
						
						<div class="form-group">
							<label class="col-xs-12 col-md-3 col-lg-4 control-label">
								<span class="label-text">Due Date</span>
							</label>
							<div class="col-xs-10 col-sm-9 col-md-6 col-lg-5 form-field input_controls">
								<input value="{{record.due_date}}" class="form-control" readonly=""/>
							</div>
						</div>
						<div class="col-xs-2 col-sm-3 col-lg-2 form-field-addons"></div>
					</form>			

				</div>
				<div id="right_column" class='col-sm-6 column'>				
					<form class="form-horizontal">
						<div class="form-group">
							<label class="col-xs-12 col-md-3 col-lg-4 control-label">
								<span class="label-text">State</span>
							</label>
							<div class="col-xs-10 col-sm-9 col-md-6 col-lg-5 form-field input_controls">
								<input value="{{record.state}}" class="form-control" readonly=""/>
							</div>
							<div class="col-xs-2 col-sm-3 col-lg-2 form-field-addons"></div>
						</div>
						
					</form>		

				</div>
			</div>
			<!-- LISTS -->
			<div id="summary_lists" class="col-xs-12">
				<p><b>Application Provisioning</b></p>
				<div class="col-xs-12">
					<div class="col-xs-12 col-sm-6">
						<summary-list title="Users" content="{{record.variables.users.value}}" max="8"></summary-list>
					</div>
					<div class="col-xs-12 col-sm-6">
						<summary-list title="Applications" content="{{chosenAppsNames}}" max="8"></summary-list>
					</div>
				</div>
			</div>
			
			
			<!-- TABS -->
			<div id="tabs-macro" class="col-xs-12">
			
				<ul id="tablist" role="tablist" class="nav nav-tabs sn-tabs-basic">

					<li role="presentation" class="active" data-toggle="tab" ng-click="selectTab($event)">
						<a href="#" goto="tab1" class="tab-title active"><b>Add users to Delivery Group(s)</b></a>
					</li>
					<li role="presentation" data-toggle="tab" ng-click="selectTab($event)">
						<a href="#" goto="tab2" class="tab-title"><b>Add users to Active Directory Group(s)</b></a>
					</li>

				</ul>
				<div class="tab-content">
					<div id="tab1" class="tab-pane active col-sm-12">						
						
						<group-object type="Delivery Group" group="{{dgrp}}" users="{{record.variables.users.value}}" allapps="{{all_apps}}" ng-repeat="dgrp in deliveryGroups" ng-if="dgrp.chosen == true"></group-object>
											
					</div>
					<div id="tab2" class="tab-pane col-sm-12">			
						<group-object type="AD Group" group="{{dgrp}}" users="{{record.variables.users.value}}" allapps="{{all_apps}}" ng-repeat="dgrp in deliveryGroups" ng-if="dgrp.chosen == true"></group-object>
					</div>
				</div>

			</div>				
			
			<div class="col-xs-12 footer">
				<button class="form_action_button action_context btn btn-default" ng-click="submitUpdate()">Update</button>
			</div>
			
		</div>		
		
	</body>
	
</j:jelly>]]></html>
        <name>citrix_requests</name>
        <processing_script/>
        <sys_class_name>sys_ui_page</sys_class_name>
        <sys_created_by>sebastiang</sys_created_by>
        <sys_created_on>2018-04-17 01:14:52</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>da809645db259b00a7287bec0f96195a</sys_id>
        <sys_mod_count>376</sys_mod_count>
        <sys_name>citrix_requests</sys_name>
        <sys_package display_value="Citrix Automation Services" source="x_wcs_ctrx_auto_sv">790cd3e8db8513406d3c72fc0f961915</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Citrix Automation Services">790cd3e8db8513406d3c72fc0f961915</sys_scope>
        <sys_update_name>sys_ui_page_da809645db259b00a7287bec0f96195a</sys_update_name>
        <sys_updated_by>sebastiang</sys_updated_by>
        <sys_updated_on>2018-04-27 14:39:10</sys_updated_on>
    </sys_ui_page>
</record_update>
